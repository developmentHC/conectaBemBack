{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ConectaBem APIs",
    "description": "APIs para o projeto ConectaBem"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints relacionados a autenticação do usuário"
    },
    {
      "name": "User",
      "description": "Endpoints relacionados ao usuário"
    },
    {
      "name": "Address",
      "description": "Endpoints relacionados aos endereços do usuário"
    },
    {
      "name": "Search",
      "description": "Endpoints relacionados a busca de dados"
    },
    {
      "name": "Agendamentos",
      "description": "Endpoints relacionados a agendamentos de consultas"
    },
    {
      "name": "Test",
      "description": "Endpoints de teste"
    },
    {
      "name": "Webhooks",
      "description": "Eventos enviados pelo servidor (documentação)"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "paths": {
    "/auth/sendOTP": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Envia o código OTP para o e-mail enviado pelo body",
        "description": "Envia o código OTP para registro/login da conta no e-mail enviado no body",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário já existente, código OTP enviado por e-mail"
          },
          "201": {
            "description": "Usuário criado com sucesso e código OTP enviado por e-mail"
          },
          "422": {
            "description": "Parâmetros exigidos não estão sendo enviados no body"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/auth/checkOTP": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Checa se OTPs coincidem, e parte para o login/registro do usuário",
        "description": "Checa se o OTP enviado no body é o mesmo OTP encriptado no backend. Se for o mesmo, será checado se o usuário já está cadastrado no backend, se estiver, o usuário é logado, se não estiver, o usuário está liberado para o registro",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "OTP": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Còdigos OTP coincidem"
          },
          "401": {
            "description": "Códigos OTP não coincidem"
          },
          "422": {
            "description": "Parâmetros exigidos não estão sendo enviados no body"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/auth/createPatient": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Completa o cadastro do usuário paciente",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "É necessário já ter feito o cadastro anterior do usuário nos endpoints de sendOTP e checkOTP para conseguir utilizar este endpoint",
            "schema": {
              "$ref": "#/definitions/AddUserPatient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontardo, mas nenhuma alteração realizada no seu cadastro"
          },
          "201": {
            "description": "Usuário encontrado, cadastro completado com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "422": {
            "description": "Parâmetros exigidos não estão sendo enviados no body"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/auth/createProfessional": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Completa o cadastro do usuário profissional",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "É necessário já ter feito o cadastro anterior do usuário nos endpoints de sendOTP e checkOTP para conseguir utilizar este endpoint",
            "schema": {
              "$ref": "#/definitions/AddUserProfessional"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontardo, mas nenhuma alteração realizada no seu cadastro"
          },
          "201": {
            "description": "Usuário encontrado, cadastro completado com sucesso"
          },
          "403": {
            "description": "Acesso Negado"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "422": {
            "description": "Parâmetros exigidos não estão sendo enviados no body"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retorna todas as informações do usuário",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado, dados retornados"
          },
          "401": {
            "description": "Cookie não encontrado"
          },
          "403": {
            "description": "Acesso Negado"
          },
          "404": {
            "description": "Não Encontrado"
          },
          "500": {
            "description": "Bad request"
          }
        }
      }
    },
    "/appointments": {
      "post": {
        "tags": [
          "Agendamentos"
        ],
        "summary": "Criar solicitação de agendamento (paciente)",
        "description": "Paciente cria uma solicitação para um profissional em data/hora escolhidas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT do paciente — formato: Bearer <token>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "professionalId",
                    "dateTime",
                    "address"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "professionalId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "6876317147871e2d7f74dd90"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Trazer exames anteriores"
                        }
                      }
                    },
                    "dateTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2025-09-10T10:00:00Z"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "required": {
                          "type": "array",
                          "example": [
                            "clinicId"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "clinicId": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "688d1507f086e02085acf44c"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Criado"
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Acesso Negado"
          },
          "409": {
            "description": "Conflito"
          },
          "422": {
            "description": ""
          },
          "500": {
            "description": "Erro Interno do Servidor"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointments/{id}/actions": {
      "post": {
        "tags": [
          "Agendamentos"
        ],
        "summary": "Executa uma ação no agendamento",
        "description": "Permite confirmar, cancelar, remarcar ou completar um agendamento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do agendamento"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT do paciente ou profissional (Bearer <token>)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "action"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "confirm",
                            "cancel",
                            "reschedule",
                            "complete"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "reason": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Motivo do cancelamento (opcional)"
                                }
                              }
                            },
                            "dateTime": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "format": {
                                  "type": "string",
                                  "example": "date-time"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Nova data/hora (ISO 8601) para remarcar"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação executada com sucesso"
          },
          "400": {
            "description": "Ação inválida ou payload ausente"
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Sem permissão para executar a ação"
          },
          "404": {
            "description": "Agendamento não encontrado"
          },
          "409": {
            "description": "Conflito de agenda"
          },
          "422": {
            "description": "Transição de status inválida"
          },
          "500": {
            "description": "Erro interno"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointments/{id}": {
      "get": {
        "tags": [
          "Agendamentos"
        ],
        "summary": "Buscar detalhes de um agendamento",
        "description": "Retorna informações detalhadas de um agendamento específico. O agendamento não pode estar cancelado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do agendamento"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT do paciente ou profissional (Bearer <token>)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Acesso Negado"
          },
          "404": {
            "description": "Não Encontrado"
          },
          "500": {
            "description": "Erro Interno do Servidor"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/appointments/me": {
      "get": {
        "tags": [
          "Agendamentos"
        ],
        "summary": "Meus agendamentos (Paciente ou Profissional)",
        "description": "Lista agendamentos do usuário autenticado (paciente ou profissional).",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT do paciente ou profissional (Bearer <token>)"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Acesso Negado"
          },
          "500": {
            "description": "Erro Interno do Servidor"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/search/highlightsWeek": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Pesquisa os profissionais destaques da semana",
        "description": "",
        "responses": {
          "200": {
            "description": "Profissionais encontrados, retorna um range de 10 profissionais"
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/search/professionalBySpeciality/{speciality}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Pesquisa um range de 10 profissionais de uma especialidade específica",
        "description": "",
        "parameters": [
          {
            "name": "speciality",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional encontrado, retorna um range de 10 profissionais"
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/search/searchBar/{terms}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Barra de pesquisa",
        "description": "",
        "parameters": [
          {
            "name": "terms",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Profissionais encontrados, retorna um range de 10 profissionais"
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/address": {
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Atualizar endereço do usuário",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dados do endereço atualizado",
            "schema": {
              "type": "object",
              "properties": {
                "addressId": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "507f1f77bcf86cd799439011"
                    },
                    "description": {
                      "type": "string",
                      "example": "ID do endereço a ser atualizado"
                    }
                  }
                },
                "cep": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "12345678"
                    },
                    "description": {
                      "type": "string",
                      "example": "CEP do endereço"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Casa"
                    },
                    "description": {
                      "type": "string",
                      "example": "Nome do local"
                    }
                  }
                },
                "endereco": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Rua Example, 123"
                    },
                    "description": {
                      "type": "string",
                      "example": "Logradouro"
                    }
                  }
                },
                "bairro": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Centro"
                    },
                    "description": {
                      "type": "string",
                      "example": "Bairro"
                    }
                  }
                },
                "estado": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "SP"
                    },
                    "description": {
                      "type": "string",
                      "example": "Estado"
                    }
                  }
                },
                "complemento": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Apto 123"
                    },
                    "description": {
                      "type": "string",
                      "example": "Complemento do endereço"
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "boolean"
                    },
                    "example": {
                      "type": "boolean",
                      "example": false
                    },
                    "description": {
                      "type": "string",
                      "example": "Indica se é o endereço ativo"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endereço atualizado com sucesso"
          },
          "304": {
            "description": "Endereço está idêntico ao banco de dados"
          },
          "422": {
            "description": "Parâmetros exigidos não estão sendo enviados no body"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Retorna todos os endereços do usuário",
        "description": "",
        "responses": {
          "200": {
            "description": "Endereços encontrados",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "507f1f77bcf86cd799439011"
                      },
                      "cep": {
                        "type": "string",
                        "example": "12345678"
                      },
                      "address": {
                        "type": "string",
                        "example": "Rua Example, 123"
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Centro"
                      },
                      "city": {
                        "type": "string",
                        "example": "São Paulo"
                      },
                      "state": {
                        "type": "string",
                        "example": "SP"
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/active-address": {
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Alterar endereço principal do usuário",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "ID do endereço que será definido como principal",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "addressId"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "addressId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "507f1f77bcf86cd799439011"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endereço principal atualizado com sucesso"
          },
          "304": {
            "description": "Não Modificado"
          },
          "404": {
            "description": "Endereço não encontrado"
          },
          "422": {
            "description": "ID do endereço não fornecido"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/teste": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Teste para verificar se API está funcionando",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks/message-created": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Evento enviado quando uma nova mensagem é criada",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Event-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "message.created",
            "description": "Tipo do evento"
          },
          {
            "name": "X-Event-Id",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "e5ae2396-ff2c-4a6b-8906-73a4459d42cc",
            "description": "UUID único do evento"
          },
          {
            "name": "X-Signature-SHA256",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "a8bcf7e31c9d8d...",
            "description": "Assinatura HMAC SHA-256 do corpo com WEBHOOK_SECRET"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookMessageCreated"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exemplo de payload recebido pelo webhook",
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "example": "e5ae2396-ff2c-4a6b-8906-73a4459d42cc"
                },
                "type": {
                  "type": "string",
                  "example": "message.created"
                },
                "occurredAt": {
                  "type": "string",
                  "example": "2025-08-05T22:48:13.781Z"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "string",
                      "example": "68928a2d6acdb8a8dd58cc63"
                    },
                    "conversation": {
                      "type": "string",
                      "example": "conv_teste_123"
                    },
                    "sender": {
                      "type": "string",
                      "example": "68928a2d6acdb8a8dd58cc62"
                    },
                    "senderName": {
                      "type": "string",
                      "example": "Testador"
                    },
                    "content": {
                      "type": "string",
                      "example": "Mensagem teste webhook"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-05T22:48:13.592Z"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Assinatura inválida"
          }
        }
      }
    }
  },
  "definitions": {
    "AddUserProfessional": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "userId",
            "name",
            "birthdayDate",
            "CNPJCPFProfissional",
            "residentialAddress",
            "clinic",
            "professionalSpecialties",
            "professionalServicePreferences",
            "otherProfessionalSpecialties"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "João Silva"
                }
              }
            },
            "birthdayDate": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 1632824400000
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "cep": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "12345-678"
                            }
                          }
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "Rua das Flores"
                            }
                          }
                        },
                        "neighborhood": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "Centro"
                            }
                          }
                        },
                        "city": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "São Paulo"
                            }
                          }
                        },
                        "state": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "SP"
                            }
                          }
                        },
                        "active": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "boolean"
                            },
                            "example": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "CNPJCPFProfissional": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "123.456.789-00"
                }
              }
            },
            "clinic": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Clínica Saúde Total"
                        }
                      }
                    },
                    "cep": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "12345-678"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Avenida Paulista"
                        }
                      }
                    },
                    "neighborhood": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Bela Vista"
                        }
                      }
                    },
                    "number": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "1000"
                        }
                      }
                    },
                    "city": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "São Paulo"
                        }
                      }
                    },
                    "state": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "SP"
                        }
                      }
                    },
                    "addition": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Sala 123"
                        }
                      }
                    }
                  }
                }
              }
            },
            "professionalSpecialties": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Cardiologia",
                    "Clínica Geral"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "professionalServicePreferences": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Consulta",
                    "Exame"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "otherProfessionalSpecialties": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Acupuntura"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AddUserPatient": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "userId",
            "name",
            "birthdayDate",
            "address",
            "userSpecialties",
            "userServicePreferences",
            "userAcessibilityPreferences"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "João Silva"
                }
              }
            },
            "birthdayDate": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 1632824400000
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "cep": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "12345-678"
                            }
                          }
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "Rua das Flores"
                            }
                          }
                        },
                        "neighborhood": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "Centro"
                            }
                          }
                        },
                        "city": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "São Paulo"
                            }
                          }
                        },
                        "state": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "SP"
                            }
                          }
                        },
                        "active": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "boolean"
                            },
                            "example": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "userSpecialties": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Cardiologia",
                    "Clínica Geral"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "userServicePreferences": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Consulta",
                    "Exame"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "userAcessibilityPreferences": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "example": {
                      "type": "array",
                      "example": [
                        "Cadeira de rodas",
                        "Deficiência visual"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Appointment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "64fae32bd00141c1a2eaa321"
                }
              }
            },
            "patient": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "64fae24ad00141c1a2eaa320"
                }
              }
            },
            "professional": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "64fae109d00141c1a2eaa31f"
                }
              }
            },
            "dateTime": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                },
                "example": {
                  "type": "string",
                  "example": "2025-08-01T14:00:00.000Z"
                }
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "confirmed"
                }
              }
            }
          }
        }
      }
    },
    "WebhookMessageCreated": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "e5ae2396-ff2c-4a6b-8906-73a4459d42cc"
                }
              }
            },
            "type": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "message.created"
                }
              }
            },
            "occurredAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                },
                "example": {
                  "type": "string",
                  "example": "2025-08-05T22:48:13.781Z"
                }
              }
            },
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "68928a2d6acdb8a8dd58cc63"
                        }
                      }
                    },
                    "conversation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "conv_teste_123"
                        }
                      }
                    },
                    "sender": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "68928a2d6acdb8a8dd58cc62"
                        }
                      }
                    },
                    "senderName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Testador"
                        }
                      }
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Mensagem teste webhook"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        },
                        "example": {
                          "type": "string",
                          "example": "2025-08-05T22:48:13.592Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}